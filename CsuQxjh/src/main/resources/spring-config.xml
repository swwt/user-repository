<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
  xsi:schemaLocation="
  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
  http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	  
	  <context:property-placeholder location="classpath:resources.properties" /> 
	  <!-- 开启AOP监听 只对当前配置文件有效 -->
	  <aop:aspectj-autoproxy expose-proxy="true" /><!--注解风格支持-->   
	  <!-- 扫描注解Bean -->
	  <context:component-scan base-package="com.csu.qxjh">
	    <context:exclude-filter type="annotation" 
	        expression="org.springframework.stereotype.Controller" />
	  	<context:exclude-filter type="annotation" 
			expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	  </context:component-scan>
	
	  <!-- 数据源 -->
	  <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
	    <!-- 基本属性 url、user、password -->
	    <property name="url" value="${connection.url}" />
	    <property name="username" value="${connection.username}" />
	    <property name="password" value="${connection.password}" />
	    <!-- 配置初始化大小、最小、最大 -->
	    <property name="initialSize" value="${druid.initialSize}" />
	    <property name="minIdle" value="${druid.minIdle}" />
	    <property name="maxActive" value="${druid.maxActive}" />
	    <!-- 配置获取连接等待超时的时间 -->
	    <property name="maxWait" value="${druid.maxWait}" />
	    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	    <property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}" />
	    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	    <property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}" />
	    <property name="validationQuery" value="${druid.validationQuery}" />
	    <property name="testWhileIdle" value="${druid.testWhileIdle}" />
	    <property name="testOnBorrow" value="${druid.testOnBorrow}" />
	    <property name="testOnReturn" value="${druid.testOnReturn}" />
	    <!-- 打开PSCache，并且指定每个连接上PSCache的大小 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。 -->
	    <property name="poolPreparedStatements" value="${druid.poolPreparedStatements}" />
	    <property name="maxPoolPreparedStatementPerConnectionSize" value="${druid.maxPoolPreparedStatementPerConnectionSize}" />
	    <!-- 配置监控统计拦截的filters -->
	    <property name="filters" value="${druid.filters}" />
	    <!-- <property name="connectionProperties" value="${druid.connectionProperties}" /> -->
    	
	  </bean>

	  <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
	    <property name="dataSource" ref="dataSource" />
	    <!-- org.springframework.orm.hibernate4.LocalSessionFactoryBean -->
	    
	    <!-- 扫描Hibernate注解方式的pojo包 -->
	  <property name="packagesToScan">
	       <list>
	       		<value>com.csu.qxjh.test.pojo</value>
	            <value>com.csu.qxjh.admin.pojo</value>
	            <value>com.csu.qxjh.user.pojo</value>
	            <value>com.csu.qxjh.sellor.pojo</value>
	            <value>com.csu.qxjh.news.pojo</value>
	            <value>com.csu.qxjh.goods.pojo</value>
	       </list>
      </property>
    	
	    <property name="hibernateProperties">
	      <props>
	        <prop key="hibernate.dialect">${hibernate.dialect}</prop>
	        <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
	        <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
	        <!-- 设置 Hibernate 的事务隔离级别 -->
    		<prop key="connection.isolation">4</prop>
	    <!--   <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>-->   
	        <!-- 配置管理 Session 的方式 
    	    <prop key="hibernate.current_session_context_class">
    	   ${current_session_context_class}</prop>-->
    	    <prop key="hibernate.current_session_context_class">
    	      org.springframework.orm.hibernate4.SpringSessionContext</prop>
	      </props>
	    </property>
	    
	    <!-- <property name="mappingLocations" 
			value="classpath:com/csu/qxjh/test/pojo/*.hbm.xml"></property> -->
			
	  </bean>

	
	 <bean id="transactionManager"  
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
        <property name="sessionFactory" ref="sessionFactory" />  
   	 </bean>  
    <!--启动注解用注解来管理事务-->  
   	 <tx:annotation-driven transaction-manager="transactionManager"/> 
  
</beans>